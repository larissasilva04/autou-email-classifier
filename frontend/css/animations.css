.animate-fade-in-up {
    animation: fadeInUp 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

@keyframes fadeInUp {
    0% {
        opacity: 0;
        transform: translateY(30px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

.animate-fade-in-down {
    animation: fadeInDown 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

@keyframes fadeInDown {
    0% {
        opacity: 0;
        transform: translateY(-30px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

.animate-fade-in-left {
    animation: fadeInLeft 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

@keyframes fadeInLeft {
    0% {
        opacity: 0;
        transform: translateX(-30px);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

.animate-fade-in-right {
    animation: fadeInRight 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

@keyframes fadeInRight {
    0% {
        opacity: 0;
        transform: translateX(30px);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

.animate-scale-in {
    animation: scaleIn 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;
}

@keyframes scaleIn {
    0% {
        opacity: 0;
        transform: scale(0.5);
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}

.animate-rotate-in {
    animation: rotateIn 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

@keyframes rotateIn {
    0% {
        opacity: 0;
        transform: rotate(-180deg) scale(0.5);
    }
    100% {
        opacity: 1;
        transform: rotate(0deg) scale(1);
    }
}

.stagger-animation > *:nth-child(1) {
    animation-delay: 0s;
}

.stagger-animation > *:nth-child(2) {
    animation-delay: 0.1s;
}

.stagger-animation > *:nth-child(3) {
    animation-delay: 0.2s;
}

.stagger-animation > *:nth-child(4) {
    animation-delay: 0.3s;
}

.stagger-animation > *:nth-child(5) {
    animation-delay: 0.4s;
}

.stagger-animation > *:nth-child(n+6) {
    animation-delay: 0.5s;
}

.animate-hover-lift {
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.animate-hover-lift:hover {
    transform: translateY(-8px);
    box-shadow: 0 20px 40px rgba(15, 23, 42, 0.15);
}

.animate-hover-grow {
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.animate-hover-grow:hover {
    transform: scale(1.05);
}

.animate-hover-shrink {
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.animate-hover-shrink:hover {
    transform: scale(0.95);
}

.animate-hover-rotate {
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.animate-hover-rotate:hover {
    transform: rotate(5deg);
}

.animate-hover-tilt {
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.animate-hover-tilt:hover {
    transform: perspective(1000px) rotateX(10deg);
}

.btn-animate-ripple {
    position: relative;
    overflow: hidden;
}

.btn-animate-ripple::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.6s, height 0.6s;
}

.btn-animate-ripple:active::before {
    width: 300px;
    height: 300px;
}

.btn-animate-pulse {
    animation: buttonPulse 2s infinite;
}

@keyframes buttonPulse {
    0% {
        box-shadow: 0 0 0 0 rgba(255, 107, 53, 0.7);
    }
    70% {
        box-shadow: 0 0 0 10px rgba(255, 107, 53, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(255, 107, 53, 0);
    }
}

.btn-animate-gradient {
    background-size: 200% 100%;
    transition: background-position 0.3s ease;
}

.btn-animate-gradient:hover {
    background-position: 100% 0;
}

.animate-spin-slow {
    animation: spinSlow 3s linear infinite;
}

@keyframes spinSlow {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

.animate-bounce-gentle {
    animation: bounceGentle 2s infinite;
}

@keyframes bounceGentle {
    0%, 20%, 53%, 80%, 100% {
        transform: translateY(0);
    }
    40%, 43% {
        transform: translateY(-15px);
    }
    70% {
        transform: translateY(-7px);
    }
    90% {
        transform: translateY(-3px);
    }
}

.animate-dots {
    display: inline-block;
}

.animate-dots::after {
    content: '';
    animation: dots 1.5s steps(4, end) infinite;
}

@keyframes dots {
    0%, 20% {
        content: '';
    }
    40% {
        content: '.';
    }
    60% {
        content: '..';
    }
    80%, 100% {
        content: '...';
    }
}

.animate-progress-bar {
    position: relative;
    overflow: hidden;
}

.animate-progress-bar::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.4),
        transparent
    );
    animation: progressShine 2s infinite;
}

@keyframes progressShine {
    0% {
        left: -100%;
    }
    100% {
        left: 100%;
    }
}

.animate-morph-icon {
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.animate-morph-icon.hamburger-to-x {
    transform: rotate(45deg);
}

.animate-morph-icon.hamburger-to-x::before {
    transform: rotate(90deg);
}

.animate-flip-horizontal {
    animation: flipHorizontal 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

@keyframes flipHorizontal {
    0% {
        transform: rotateY(0);
    }
    50% {
        transform: rotateY(90deg);
    }
    100% {
        transform: rotateY(0);
    }
}

.animate-flip-vertical {
    animation: flipVertical 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

@keyframes flipVertical {
    0% {
        transform: rotateX(0);
    }
    50% {
        transform: rotateX(90deg);
    }
    100% {
        transform: rotateX(0);
    }
}

.animate-floating-particles {
    position: relative;
    overflow: hidden;
}

.animate-floating-particles::before,
.animate-floating-particles::after {
    content: '';
    position: absolute;
    width: 4px;
    height: 4px;
    background: rgba(255, 107, 53, 0.3);
    border-radius: 50%;
    animation: floatingParticles 6s infinite linear;
}

.animate-floating-particles::before {
    top: 20%;
    left: 20%;
    animation-delay: 0s;
}

.animate-floating-particles::after {
    top: 60%;
    right: 20%;
    animation-delay: 3s;
}

@keyframes floatingParticles {
    0% {
        transform: translateY(0) rotate(0deg);
        opacity: 0;
    }
    10% {
        opacity: 1;
    }
    90% {
        opacity: 1;
    }
    100% {
        transform: translateY(-100px) rotate(360deg);
        opacity: 0;
    }
}

.animate-gradient-shift {
    background-size: 400% 400%;
    animation: gradientShift 15s ease infinite;
}

@keyframes gradientShift {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

.animate-mesh-gradient {
    background: linear-gradient(
        -45deg,
        var(--primary-orange),
        var(--light-blue),
        var(--primary-blue),
        var(--success-green)
    );
    background-size: 400% 400%;
    animation: meshGradient 15s ease infinite;
}

@keyframes meshGradient {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

.animate-typewriter {
    overflow: hidden;
    white-space: nowrap;
    border-right: 2px solid var(--primary-orange);
    animation: typewriter 3s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typewriter {
    from {
        width: 0;
    }
    to {
        width: 100%;
    }
}

@keyframes blink-caret {
    from,
    to {
        border-color: transparent;
    }
    50% {
        border-color: var(--primary-orange);
    }
}

.animate-text-glow {
    animation: textGlow 2s ease-in-out infinite alternate;
}

@keyframes textGlow {
    from {
        text-shadow: 0 0 5px var(--primary-orange);
    }
    to {
        text-shadow: 0 0 20px var(--primary-orange), 0 0 30px var(--primary-orange);
    }
}

.animate-text-rainbow {
    background: linear-gradient(
        45deg,
        #ff6b35,
        #1e40af,
        #10b981,
        #f59e0b,
        #ef4444,
        #8b5cf6
    );
    background-size: 400% 100%;
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: textRainbow 3s linear infinite;
}

@keyframes textRainbow {
    0% {
        background-position: 0% 50%;
    }
    100% {
        background-position: 100% 50%;
    }
}

.animate-on-scroll {
    opacity: 0;
    transform: translateY(50px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.animate-on-scroll.in-view {
    opacity: 1;
    transform: translateY(0);
}

.animate-slide-in-left {
    opacity: 0;
    transform: translateX(-100px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.animate-slide-in-left.in-view {
    opacity: 1;
    transform: translateX(0);
}

.animate-slide-in-right {
    opacity: 0;
    transform: translateX(100px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.animate-slide-in-right.in-view {
    opacity: 1;
    transform: translateX(0);
}

.animate-gpu-accelerated {
    transform: translateZ(0);
    backface-visibility: hidden;
    perspective: 1000px;
}

@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
    
    .animate-typewriter {
        border-right: none;
        white-space: normal;
        overflow: visible;
    }
    
    .animate-floating-particles::before,
    .animate-floating-particles::after {
        display: none;
    }
    
    .animate-gradient-shift,
    .animate-mesh-gradient {
        background-size: 100% 100%;
    }
    
    .animate-on-scroll,
    .animate-slide-in-left,
    .animate-slide-in-right {
        opacity: 1;
        transform: none;
    }
}


.ease-in-quad { transition-timing-function: cubic-bezier(0.55, 0.085, 0.68, 0.53); }
.ease-in-cubic { transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
.ease-in-quart { transition-timing-function: cubic-bezier(0.895, 0.03, 0.685, 0.22); }
.ease-in-quint { transition-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06); }
.ease-in-expo { transition-timing-function: cubic-bezier(0.95, 0.05, 0.795, 0.035); }
.ease-in-circ { transition-timing-function: cubic-bezier(0.6, 0.04, 0.98, 0.335); }

.ease-out-quad { transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94); }
.ease-out-cubic { transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
.ease-out-quart { transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1); }
.ease-out-quint { transition-timing-function: cubic-bezier(0.23, 1, 0.32, 1); }
.ease-out-expo { transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1); }
.ease-out-circ { transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1); }

.ease-in-out-quad { transition-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955); }
.ease-in-out-cubic { transition-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1); }
.ease-in-out-quart { transition-timing-function: cubic-bezier(0.77, 0, 0.175, 1); }
.ease-in-out-quint { transition-timing-function: cubic-bezier(0.86, 0, 0.07, 1); }
.ease-in-out-expo { transition-timing-function: cubic-bezier(1, 0, 0, 1); }
.ease-in-out-circ { transition-timing-function: cubic-bezier(0.785, 0.135, 0.15, 0.86); }

.micro-bounce {
    transition: transform 0.2s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.micro-bounce:active {
    transform: scale(0.95);
}

.micro-wiggle {
    animation: wiggle 0.8s ease-in-out;
}

@keyframes wiggle {
    0%, 7% {
        transform: rotateZ(0);
    }
    15% {
        transform: rotateZ(-15deg);
    }
    20% {
        transform: rotateZ(10deg);
    }
    25% {
        transform: rotateZ(-10deg);
    }
    30% {
        transform: rotateZ(6deg);
    }
    35% {
        transform: rotateZ(-4deg);
    }
    40%, 100% {
        transform: rotateZ(0);
    }
}

.micro-heartbeat {
    animation: heartbeat 1.5s ease-in-out infinite both;
}

@keyframes heartbeat {
    from {
        transform: scale(1);
        transform-origin: center center;
        animation-timing-function: ease-out;
    }
    10% {
        transform: scale(0.91);
        animation-timing-function: ease-in;
    }
    17% {
        transform: scale(0.98);
        animation-timing-function: ease-out;
    }
    33% {
        transform: scale(0.87);
        animation-timing-function: ease-in;
    }
    45% {
        transform: scale(1);
        animation-timing-function: ease-out;
    }
}

.parallax-element {
    transform: translateZ(0);
    transition: transform 0.1s ease-out;
}

.parallax-slow {
    transform: translateY(calc(var(--scroll-y) * 0.5px));
}

.parallax-medium {
    transform: translateY(calc(var(--scroll-y) * 0.8px));
}

.parallax-fast {
    transform: translateY(calc(var(--scroll-y) * 1.2px));
}

.glass-morphism {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);
}

.glass-morphism-dark {
    background: rgba(15, 23, 42, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(15, 23, 42, 0.2);
    box-shadow: 0 8px 32px rgba(15, 23, 42, 0.37);
}

.neon-glow {
    text-shadow: 
        0 0 5px var(--primary-orange),
        0 0 10px var(--primary-orange),
        0 0 15px var(--primary-orange),
        0 0 20px var(--primary-orange);
    animation: neonFlicker 2s infinite alternate;
}

@keyframes neonFlicker {
    0%, 18%, 22%, 25%, 53%, 57%, 100% {
        text-shadow: 
            0 0 5px var(--primary-orange),
            0 0 10px var(--primary-orange),
            0 0 15px var(--primary-orange),
            0 0 20px var(--primary-orange);
    }
    20%, 24%, 55% {
        text-shadow: none;
    }
}

.neon-border {
    border: 2px solid var(--primary-orange);
    box-shadow: 
        inset 0 0 5px var(--primary-orange),
        0 0 5px var(--primary-orange),
        0 0 10px var(--primary-orange),
        0 0 15px var(--primary-orange);
    animation: neonBorderPulse 2s ease-in-out infinite alternate;
}

@keyframes neonBorderPulse {
    from {
        box-shadow: 
            inset 0 0 5px var(--primary-orange),
            0 0 5px var(--primary-orange),
            0 0 10px var(--primary-orange),
            0 0 15px var(--primary-orange);
    }
    to {
        box-shadow: 
            inset 0 0 5px var(--primary-orange),
            0 0 10px var(--primary-orange),
            0 0 20px var(--primary-orange),
            0 0 30px var(--primary-orange);
    }
}

.transform-3d {
    transform-style: preserve-3d;
    perspective: 1000px;
}

.rotate-3d-x:hover {
    transform: rotateX(15deg);
    transition: transform 0.3s ease;
}

.rotate-3d-y:hover {
    transform: rotateY(15deg);
    transition: transform 0.3s ease;
}

.card-3d-flip {
    perspective: 1000px;
}

.card-3d-flip .card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.8s;
    transform-style: preserve-3d;
}

.card-3d-flip:hover .card-inner {
    transform: rotateY(180deg);
}

.card-3d-flip .card-front,
.card-3d-flip .card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    border-radius: 15px;
}

.card-3d-flip .card-back {
    transform: rotateY(180deg);
}

.liquid-button {
    position: relative;
    overflow: hidden;
    z-index: 1;
}

.liquid-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
    z-index: -1;
}

.liquid-button:hover::before {
    left: 100%;
}

.liquid-fill {
    position: relative;
    overflow: hidden;
}

.liquid-fill::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 0%;
    background: linear-gradient(45deg, var(--primary-orange), var(--light-blue));
    transition: height 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    z-index: -1;
}

.liquid-fill:hover::after {
    height: 100%;
}

.magnetic-element {
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.magnetic-element.magnetic-active {
    transform: translate(var(--magnetic-x, 0), var(--magnetic-y, 0));
}

.organic-blob {
    border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
    animation: blobMorph 8s ease-in-out infinite;
}

@keyframes blobMorph {
    0% {
        border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
    }
    25% {
        border-radius: 58% 42% 75% 25% / 76% 46% 54% 24%;
    }
    50% {
        border-radius: 50% 50% 33% 67% / 55% 27% 73% 45%;
    }
    75% {
        border-radius: 33% 67% 58% 42% / 63% 68% 32% 37%;
    }
    100% {
        border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
    }
}

.energy-pulse {
    position: relative;
}

.energy-pulse::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: radial-gradient(circle, var(--primary-orange) 0%, transparent 70%);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: energyPulse 2s ease-out infinite;
}

@keyframes energyPulse {
    0% {
        width: 0;
        height: 0;
        opacity: 1;
    }
    100% {
        width: 200px;
        height: 200px;
        opacity: 0;
    }
}

.delay-100 { animation-delay: 0.1s; }
.delay-200 { animation-delay: 0.2s; }
.delay-300 { animation-delay: 0.3s; }
.delay-500 { animation-delay: 0.5s; }
.delay-700 { animation-delay: 0.7s; }
.delay-1000 { animation-delay: 1s; }

.duration-100 { animation-duration: 0.1s; }
.duration-200 { animation-duration: 0.2s; }
.duration-300 { animation-duration: 0.3s; }
.duration-500 { animation-duration: 0.5s; }
.duration-700 { animation-duration: 0.7s; }
.duration-1000 { animation-duration: 1s; }
.duration-2000 { animation-duration: 2s; }

.infinite { animation-iteration-count: infinite; }
.once { animation-iteration-count: 1; }
.twice { animation-iteration-count: 2; }

.paused { animation-play-state: paused; }
.running { animation-play-state: running; }